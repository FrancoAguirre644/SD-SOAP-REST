
package com.ecommerce.ecommerce.modulo_banca_soap;

import java.math.BigInteger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Application", targetNamespace = "modulo_banca_soap")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Application {


    /**
     * 
     *         Valida que la informacion que registro el cliente coincida con el de la base de datos.
     *         @param tarjeta_info contiene la informacion de la tarjeta.
     *         @param usuario_info contiene la informacion del usuario.
     *         @return 1 si la informacion ingresada coincide. Caso contrario, retorna 0.
     *         
     * 
     * @param nroTarjeta
     * @param apellido
     * @param nombre
     * @param dni
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "validar_tarjeta", action = "validar_tarjeta")
    @WebResult(name = "validar_tarjetaResult", targetNamespace = "modulo_banca_soap")
    @RequestWrapper(localName = "validar_tarjeta", targetNamespace = "modulo_banca_soap", className = "com.ecommerce.ecommerce.modulo_banca_soap.ValidarTarjeta")
    @ResponseWrapper(localName = "validar_tarjetaResponse", targetNamespace = "modulo_banca_soap", className = "com.ecommerce.ecommerce.modulo_banca_soap.ValidarTarjetaResponse")
    public BigInteger validarTarjeta(
        @WebParam(name = "nro_tarjeta", targetNamespace = "modulo_banca_soap")
        BigInteger nroTarjeta,
        @WebParam(name = "nombre", targetNamespace = "modulo_banca_soap")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "modulo_banca_soap")
        String apellido,
        @WebParam(name = "dni", targetNamespace = "modulo_banca_soap")
        BigInteger dni);

    /**
     * 
     *         Valida si la compra a realizar con el medio de pago elegido no supera el limite mensual (teniendo en cuenta todas las compras del mes) y si es el caso,
     *         si se cuenta con saldo suficiente.
     *         @param tarjeta_info contiene la informacion de la tarjeta.
     *         @param total_a_pagar contiene el total de la venta que se quiere pagar.
     *         @param total_gastado contiene el total gastado con la tarjeta en el mes.
     *         @return 1 si la compra puede ser realizada (es decir, que el limite mensual aun no es alcanzado). Caso contrario, retorna 0.
     *         
     * 
     * @param tipoTarjeta
     * @param totalAPagar
     * @param nroTarjeta
     * @param totalGastado
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(operationName = "validar_limite_mensual", action = "validar_limite_mensual")
    @WebResult(name = "validar_limite_mensualResult", targetNamespace = "modulo_banca_soap")
    @RequestWrapper(localName = "validar_limite_mensual", targetNamespace = "modulo_banca_soap", className = "com.ecommerce.ecommerce.modulo_banca_soap.ValidarLimiteMensual")
    @ResponseWrapper(localName = "validar_limite_mensualResponse", targetNamespace = "modulo_banca_soap", className = "com.ecommerce.ecommerce.modulo_banca_soap.ValidarLimiteMensualResponse")
    public BigInteger validarLimiteMensual(
        @WebParam(name = "nro_tarjeta", targetNamespace = "modulo_banca_soap")
        BigInteger nroTarjeta,
        @WebParam(name = "tipo_tarjeta", targetNamespace = "modulo_banca_soap")
        String tipoTarjeta,
        @WebParam(name = "total_a_pagar", targetNamespace = "modulo_banca_soap")
        BigInteger totalAPagar,
        @WebParam(name = "total_gastado", targetNamespace = "modulo_banca_soap")
        BigInteger totalGastado);

}
